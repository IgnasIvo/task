Create enumerations for fuel, body and transmission
    Fuel: DIESEL, PETROL, ELECTRICITY
    Transmission: MANUAL, AUTOMATIC
    Body: SEDAN, HATCHBACK, SALOON

Create interfaces
    Movable (what should implement this?)
        void move(int meters)
        int getTotalMetersMoved()
    CanDrive (what should implement this?)
        void drive(int meters)
    CanFly (what should implement this?)
        void fly(int meters)
    CanSwim (what should implement this?)
        void swim(int meters)

Upgrade our Plane class
    In order for a plane to fly, it first needs to drive 100 meters
    After flight, it drives another 100

Upgrade transport engine using generics
    Create Powered<T> interface
        T getFuel();
        boolean hasPower();
        void work();
    Create Engine class
        should be powered by Fuel enum (Powered<Fuel>)
    Add the engine to Transport
        remove String engine and String fuel fields
        add Engine engine field
        update constructors

-- EXTRA --
Allow transport to not have an engine
    Use Optional<T> class to make engine Optional<Engine>
